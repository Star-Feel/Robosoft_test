[project]
name = 'ssim'
version = '0.0.1'
description = 'Text Physics-Informed Neural Network'
readme = 'README.md'
requires-python = '>=3.11'
classifiers = [
    'Programming Language :: Python :: 3',
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: OS Independent',
]

[project.license]
file = 'LICENSE'

[[project.authors]]
name = 'Ziyu Wei'
email = 'weiziyu99@gmail.com'

[project.urls]
Homepage = 'https://github.com/jobswei/SoftRoboticaSimulator'

[tool.autoflake]
in-place = true

[tool.yapf]
allow_split_before_dict_value = false
coalesce_brackets = true
dedent_closing_brackets = true
split_arguments_when_comma_terminated = true
split_complex_comprehension = true
split_before_arithmetic_operator = true

[tool.isort]
extra_standard_library = [
    'typing_extensions',
]
profile = 'hug'
src_paths = [
    'ssim',
]
line_length = 79
multi_line_output = 3

[tool.pydocstyle]
convention = 'google'
add-ignore = 'D100,D101,D102,D103,D104,D105,D106,D107'

[tool.mypy]
files = [
    'ssim',
]
plugins = 'numpy.typing.mypy_plugin'

[[tool.mypy.overrides]]
module = [
    'scipy.*',
    'transformers.*',
]
ignore_missing_imports = true

[tool.codespell]
write-changes = true

[tool.pytest.ini_options]
testpaths = 'ssim'
addopts = '--doctest-modules'

[tool.coverage.run]
branch = true
command_line = '-m pytest'
source = [
    'ssim',
]

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',

    'def __repr__',
    'def \w+_cli\(\)',

    'raise AssertionError',
    'raise NotImplementedError',

    'if __name__ == .__main__.:',

    'class .*\(.*\bProtocol\b.*\):',
    '@(abc\.)?abstractmethod',
    '@overload',
]

[tool.commitizen]
name = 'cz_conventional_commits'
version = "0.0.1"
tag_format = 'v$version'
version_files = [
    'pyproject.toml:^version',
    'ssim/__init__.py:^__version__',
]

[tool.pylint.'messages control']
disable = [
    'attribute-defined-outside-init',
    'cyclic-import',
    'design',
    'eval-used',
    'exec-used',
    'fixme',
    'import-outside-toplevel',
    'missing-module-docstring',
    'missing-class-docstring',
    'missing-function-docstring',
    'not-callable',
    'protected-access',
    'unspecified-encoding',
    'unused-argument',
    'use-dict-literal',
    'use-list-literal',
]
enable = [
    'useless-suppression',
]

[tool.pylint.typecheck]
generated-members = [
    'numpy.*',
    'scipy.*',
    'matplotlib.*',
]

[tool.pylint.format]
expected-line-ending-format = 'LF'
max-line-length = 79

[tool.bandit]
skips = [
    'B101',
    'B614',
]
